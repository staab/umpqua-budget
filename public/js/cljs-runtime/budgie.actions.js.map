{"version":3,"file":"budgie.actions.js","sources":["budgie/actions.cljs"],"mappings":";;;;AAIA,AAAA,AAIA,yCAAA,zCAAMA;AAAN,AACE,6FAAA,7FAACC,mDAAMC,0BAAaC,0EAAc,AAAU,KAAAC;;AAC5C,4BAAA,+EAAA,2CAAA,kEAAA,AAAAC,jNAACC,iOAAuCC;;AAE1C,sCAAA,tCAAMC,oFAAiBC;AAAvB,AACE,4BAAA,wEAAA,2CAAA,xIAACH,8MAAqCG;;AAExC,oCAAA,pCAAMC;AAAN,AACE,OAAOC;;AAIT,AAAAC,qEAAA,2EAAA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAAC,gCAAA,AAAAD,+BAAA,KAAA,OAAA,QAAA,AAAAE,8CAAAC,mBAAAH,YAAAA;cAAA,AAAAI,4CAAAJ,eAAA,rEAAoDK;AAApD,AACE,AAACC,mDAAMC,mBAAMC,gBAAMH;;AACnB,OAACI;;AAEH,AAAAX,qEAAA,kFAAA,WAAAY;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,EAAA,EAAA,EAAA,CAAAA,cAAA,QAAA,EAAA,EAAA,CAAA,AAAAA,iDAAA,WAAA,CAAAV,gCAAA,AAAAU,+BAAA,KAAA,OAAA,QAAA,AAAAT,8CAAAC,mBAAAQ,YAAAA;cAAA,AAAAP,4CAAAO,eAAA,rEAAwDN;AAAxD,AACE,OAACC,mDAAMlB,0BAAaoB,gBAAMH;;AAI5B,8BAAA,2CAAA,iEAAA,SAAA,oDAAA,UAAA,oDAAA,iCAAA,2DAAA,mFAAA,uBAAA,2DAAA,+BAAA,riBAAKO,qmBAMSlB;AAEd,AAAKG,+BAAc,AAASgB,oBAAa,AAACC,qBAAQF","names":["budgie.actions/load-transactions!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","budgie.state/transactions","cljs.core/assoc","js/Date","cljs.core/deref","budgie.ws/send!","budgie.state/session-id","budgie.actions/create-session!","v","budgie.actions/link-account!","budgie.actions/plaid-handler","budgie.ws/handle-message","p__11008","map__11009","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","payload","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","budgie.state/state","cljs.core/merge","budgie.state/save-state!","p__11011","map__11012","budgie.actions/plaid-config","window/Plaid","cljs.core/clj->js"],"sourcesContent":["(ns budgie.actions\n  (:require [budgie.state :refer [state transactions session-id save-state!]]\n            [budgie.ws :refer [send! handle-message]]))\n\n(declare plaid-handler)\n\n;; App actions\n\n(defn load-transactions! []\n  (swap! transactions assoc :loaded (.valueOf (js/Date.)))\n  (send! :load-transactions {:session-id @session-id}))\n\n(defn create-session! [v]\n  (send! :create-session {:public-token v}))\n\n(defn link-account! []\n  (.open plaid-handler))\n\n;; Websocket handlers\n\n(defmethod handle-message :session-created [{:keys [payload]}]\n  (swap! state merge payload)\n  (save-state!))\n\n(defmethod handle-message :transactions-loaded [{:keys [payload]}]\n  (swap! transactions merge payload))\n\n;; Plaid\n\n(def plaid-config\n  {:clientName \"Budgie\"\n   :env \"sandbox\"\n   :key \"10e3761c1655ff33ff9c5f410122ba\"\n   :product [\"transactions\"]\n   :webhook \"https://budgie.herokuapp.com\"\n   :onSuccess create-session!})\n\n(def plaid-handler (.create window.Plaid (clj->js plaid-config)))\n\n"]}