{"version":3,"sources":["wedge/client/actions.cljs"],"mappings":"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","names":["wedge.client.actions/now","js/Date","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","wedge.client.actions/start!","seq36492","G__36493","cljs.core/first","cljs.core/next","self__4717__auto__","cur","args","map__36494","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","last-load","or__4131__auto__","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","wedge.client.ws/send!","wedge.client.actions/resolve!","value","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","wedge.client.actions/reject!","error","wedge.client.actions/toggle-sidebar!","p1__36498#","wedge.client.state/ui","cljs.core/update","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","wedge.client.actions/toggle-picker!","p1__36499#","wedge.client.actions/initialize!","wedge.client.actions.start_BANG_.cljs$core$IFn$_invoke$arity$variadic","wedge.client.state/db","wedge.client.state/session-id","wedge.client.actions/create-session!","v","wedge.client.actions/link-account!","wedge.client.actions/plaid-handler","wedge.client.ws/handle-message","p__36500","map__36501","payload","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","wedge.client.state/state","cljs.core/merge","wedge.client.state/save-state!","p__36503","map__36504","wedge.client.actions/plaid-config","js/window.Plaid","cljs.core/clj->js"],"sourcesContent":["(ns wedge.client.actions\n  (:require [wedge.client.state :refer [state db ui session-id save-state!]]\n            [wedge.client.ws :refer [send! handle-message]]))\n\n(declare plaid-handler)\n\n(defn now [] (.valueOf (js/Date.)))\n\n(defn start! [cur & args]\n  (let [{:keys [last-load]} @cur]\n    (< (or last-load 0) (- (now) 5000))\n    (when (< (or last-load 0) (- (now) 5000))\n      (swap! cur assoc :last-load (now))\n      (apply send! args))))\n\n(defn resolve! [cur value]\n  (swap! cur assoc :last-load nil :value value :error nil))\n\n(defn reject! [cur error]\n  (swap! cur assoc :last-load nil :value nil :error error))\n\n;; UI actions\n\n(defn toggle-sidebar! []\n  (swap! ui update :sidebar #(if (= :open %) :closed :open)))\n\n(defn toggle-picker! []\n  (swap! ui update :picker #(if (= :open %) :closed :open)))\n\n;; Data actions\n\n(defn initialize! []\n  (start! db :initialize {:session-id @session-id}))\n\n(defn create-session! [v]\n  (send! :create-session {:public-token v}))\n\n(defn link-account! []\n  (.open plaid-handler))\n\n;; Websocket handlers\n\n(defmethod handle-message :session-created [{:keys [payload]}]\n  (swap! state merge payload)\n  (save-state!))\n\n(defmethod handle-message :initialized [{:keys [payload]}]\n  (resolve! db payload))\n\n;; Plaid\n\n(def plaid-config\n  {:clientName \"Budgie\"\n   :env \"sandbox\"\n   :key \"10e3761c1655ff33ff9c5f410122ba\"\n   :product [\"transactions\"]\n   :webhook \"https://wedge.herokuapp.com\"\n   :onSuccess create-session!})\n\n(def plaid-handler (.create window.Plaid (clj->js plaid-config)))\n\n"]}