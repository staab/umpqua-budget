{"version":3,"file":"wedge.client.actions.js","sources":["wedge/client/actions.cljs"],"mappings":"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","names":["wedge.client.actions/now","js/Date","var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","wedge.client.actions/start!","seq11152","G__11153","cljs.core/first","cljs.core/next","self__4518__auto__","cur","args","map__11154","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","last-load","or__3949__auto__","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","wedge.client.ws/send!","wedge.client.actions/resolve!","value","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","wedge.client.actions/reject!","error","wedge.client.actions/load-transactions!","wedge.client.actions.start_BANG_.cljs$core$IFn$_invoke$arity$variadic","wedge.client.state/transactions","wedge.client.state/session-id","wedge.client.actions/create-session!","v","wedge.client.actions/link-account!","wedge.client.actions/plaid-handler","wedge.client.ws/handle-message","p__11159","map__11160","payload","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","wedge.client.state/state","cljs.core/merge","wedge.client.state/save-state!","p__11162","map__11163","wedge.client.actions/plaid-config","window/Plaid","cljs.core/clj->js"],"sourcesContent":["(ns wedge.client.actions\n  (:require [wedge.client.state :refer [state transactions session-id save-state!]]\n            [wedge.client.ws :refer [send! handle-message]]))\n\n(declare plaid-handler)\n\n(defn now [] (.valueOf (js/Date.)))\n\n(defn start! [cur & args]\n  (let [{:keys [last-load]} @cur]\n    (when (< (or last-load 0) (- (now) 5000))\n      (swap! cur assoc :last-load (now))\n      (apply send! args))))\n\n(defn resolve! [cur value]\n  (swap! cur assoc :last-load nil :value value :error nil))\n\n(defn reject! [cur error]\n  (swap! cur assoc :last-load nil :value nil :error error))\n\n;; App actions\n\n(defn load-transactions! []\n  (start! transactions :load-transactions {:session-id @session-id}))\n\n(defn create-session! [v]\n  (send! :create-session {:public-token v}))\n\n(defn link-account! []\n  (.open plaid-handler))\n\n;; Websocket handlers\n\n(defmethod handle-message :session-created [{:keys [payload]}]\n  (swap! state merge payload)\n  (save-state!))\n\n(defmethod handle-message :transactions-loaded [{:keys [payload]}]\n  (swap! transactions merge payload))\n\n;; Plaid\n\n(def plaid-config\n  {:clientName \"Budgie\"\n   :env \"sandbox\"\n   :key \"10e3761c1655ff33ff9c5f410122ba\"\n   :product [\"transactions\"]\n   :webhook \"https://wedge.herokuapp.com\"\n   :onSuccess create-session!})\n\n(def plaid-handler (.create window.Plaid (clj->js plaid-config)))\n\n"]}