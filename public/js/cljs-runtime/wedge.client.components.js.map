{"version":3,"sources":["wedge/client/components.cljs"],"mappings":";;;;;;AAMA,AAAA,AAAMA;AAAN,AAAa,AAAU,AAAAC;;AAEvB,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAA+BM;AAA/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIQ,AAAA,AAAA,AAA0B,AAAA,AAAUA,AACpBC;;AAExB,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAAC,AAAiCG;AAAjCJ,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAR,AAAA,AAAAQ,AAAA,AAAA,AAAA,AAAA,AAAAP,AAAAC,AAAAM,AAAAA;AAAA,AAAAL,AAAAK,AAAA,AAAcE;AAAd,AAAAP,AAAAK,AAAA,AAAwBG;AAAxB,AACE,AAAUA;AAAV;AAAA,AAAgB,AAACL;;;AADnB,AAAA,AAGG,AAAI,AAAAO,AAAIH;AAAJ,AAAA,AAAAG;AAAAA;;AAAc,AAACC,AAAIH;;AAAvB,AAAA,AACGd,AACAO,AAAgBO;;AAExB,AAAA,AAAMI;AAAN,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAE6BC,AACrBC,AAAQC,AAAKC,AAAmB,AAAA,AAAA,AAAA,AAAAZ,AAAA,AAAA,AAACa,AACRC;;AAEjC,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEIlB,AACAQ,AACAC,AACAC,AACAO;;AAEJ,AAAA,AAAME;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AACsBC;;AAGtB,AAAA,AAAMC;AAAN,AAAA,AAAA,AACQ,AAAA,AAAAnB,AAAA,AAAA,AAAKoB,AAAYJ,AAAMC","names":["wedge.client.components/now","js/Date","wedge.client.components/dashboard-loading","p__36390","map__36393","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","wedge.client.components/dashboard-value","balance","wedge.client.actions/initialize!","wedge.client.components/dashboard","map__36396","cljs.core/deref","last-load","value","wedge.client.state/db","or__4131__auto__","cljs.core/not","wedge.client.components/add-button","wedge.client.components/sidebar","wedge.client.components/header","wedge.client.actions/toggle-sidebar!","wedge.client.state/ui-page","cljs.core/name","camel-snake-kebab.core/->Camel_Snake_Case","clojure.string/replace","wedge.client.actions/toggle-picker!","wedge.client.components/footer","wedge.client.components/app","wedge.client.components/login-page","wedge.client.actions/link-account!","wedge.client.components/root","wedge.client.state/session-id"],"sourcesContent":["(ns wedge.client.components\n  (:require [clojure.string :as s]\n            [camel-snake-kebab.core :refer [->Camel_Snake_Case]]\n            [wedge.client.state :refer [session-id db ui-page]]\n            [wedge.client.actions :as actions]))\n\n(defn now [] (.valueOf (js/Date.)))\n\n(defn dashboard-loading []\n  [:div.dashboard-loading\n   \"loading\"])\n\n(defn dashboard-value [{:keys [balance]}]\n  [:div\n   [:div.sub-header\n    [:i.fa.fa-info-circle]\n    [:p (str \"Your account has $\" (.toFixed balance 2) \" in it\")]]\n    [:button {:on-click actions/initialize!} \"reload\"]])\n\n(defn dashboard []\n  (let [{:keys [last-load value]} @db]\n    (when-not value (actions/initialize!))\n    [:div.page.dashboard\n     (if (or last-load (not value))\n       [dashboard-loading]\n       [dashboard-value value])]))\n\n(defn add-button []\n  [:div.add-button\n    \"add-button\"])\n\n(defn sidebar []\n  [:div.sidebar\n   \"sidebar\"])\n\n(defn header []\n  [:div.header\n   [:i.fa.fa-menu {:on-click actions/toggle-sidebar!}]\n   (-> @ui-page name ->Camel_Snake_Case (s/replace #\"_\" \" \"))\n   [:i.fa.fa-calendar {:on-click actions/toggle-picker!}]])\n\n(defn footer []\n  [:div.footer\n    \"footer\"])\n\n(defn app []\n  [:div\n   [dashboard]\n   [add-button]\n   [sidebar]\n   [header]\n   [footer]])\n\n(defn login-page []\n  [:button {:on-click actions/link-account!}\n    \"link account\"])\n\n(defn root []\n  [:div (if @session-id [app] [login-page])])\n"]}