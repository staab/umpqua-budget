{"version":3,"sources":["wedge/client/core.cljs"],"mappings":";;;;;;;;;;;AAYA,AAACA;AAED,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAiB,AAAA,AAACO;;AAAlB,AAAA,AAAAH,AAAAN;AAAA,AAAAO,AAAAP;AAAA,AAAiB,AAAA,AAACS;;AAAlB;;;;AAAA,AAAA,AAAAD,AAAA,AAAAT;;AAAA,AAGA,AAAA,AAAuBW;AAAvB,AACE,AAAA,AAACC,AAAUC,AAAM,AAAA,AAAiBC;;AAEpC,AAAA,AAAeC;AAAf,AAIE,AAAAC,AAAM,AAAAK;AAAN,AAAA,AAAAJ,AAAAD;AAAAE,AACqBK;AADrBJ,AAAA;AAAAC;AAAA,AACyC,AAACI,AAAoB,AAAAJ;;;AAD9D,AAAA,AAAAH,AAAAC,AAAAC,AACOG;;AADP,AAAAN,AAAA;;AAAAA;AAGA,AAACS,AACA;AAAA,AACC,AAACC;;AACD,AAACf;;;;AAGL,AAAA,AAAwBgB;AAAxB,AACE,AAAA,AAACC","names":["cljs.core/enable-console-print!","action__25414__auto__","params__25415__auto__","cljs.core/map?","map__26049","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core/vector?","vec__26051","secretary.core/add-route!","wedge.client.actions/set-page!","wedge.client.core/start","reagent.core.render.cljs$core$IFn$_invoke$arity$2","wedge.client.components/root","js/document","wedge.client.core/init","G__26055","G__26056","G__26057","G__26058","p1__26054#","js/goog.History","goog.events/listen","goog.history.EventType/NAVIGATE","secretary.core/dispatch!","wedge.client.ws/start-ws!","wedge.client.state/load-state!","wedge.client.core/stop","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns wedge.client.core\n  (:require-macros [secretary.core :refer [defroute]])\n  (:require [goog.events :as events]\n            [reagent.core :as r]\n            [secretary.core :as secretary]\n            [wedge.client.ws :refer [start-ws!]]\n            [wedge.client.state :refer [load-state!]]\n            [wedge.client.actions :refer [set-page!]]\n            [wedge.client.components :refer [root]])\n  (:import [goog History]\n           [goog.history EventType]))\n\n(enable-console-print!)\n\n(defroute \"/\" [] (set-page! :dashboard))\n\n;; start is called by init and after code reloading finishes\n(defn ^:dev/after-load start []\n  (r/render [root] (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (doto (History.)\n        (events/listen EventType.NAVIGATE #(secretary/dispatch! (.-token %)))\n        (.setEnabled true))\n  (start-ws!\n   (fn []\n    (load-state!)\n    (start))))\n\n;; this is called before any code is reloaded\n(defn ^:dev/before-load stop []\n  (println \"stop\"))\n"]}