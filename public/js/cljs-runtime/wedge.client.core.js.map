{"version":3,"sources":["wedge/client/core.cljs"],"mappings":";;;;;;;;AAQA,AAACA;AAED,AAAA,AAAMC,AAAyBC;AAA/B,AACE,AAAA,AAAIA,AAAoB,AAAA,AAAA,AAACC,AAAQC,AAAQC;;AAG3C,AAAA,AAAuBC;AAAvB,AACE,AAAA,AAACC,AAAUC,AAAM,AAAA,AAAiBC;;AAEpC,AAAA,AAAeC;AAAf,AAIE,AAACC,AACA;AAAA,AACE,AAACC;;AACD,AAACX,AAAwBY;;AACzB,AAASC,AAAQb;;AACjB,AAACK;;;;AAGN,AAAA,AAAwBS;AAAxB,AACE,AAAA,AAACC","names":["cljs.core/enable-console-print!","wedge.client.core/set-page-from-location!","location","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","wedge.client.actions/set-page!","wedge.client.core/start","reagent.core.render.cljs$core$IFn$_invoke$arity$2","wedge.client.components.core/root","js/document","wedge.client.core/init","wedge.client.ws/start-ws!","wedge.client.state/load-state!","js/location","wedge.client.components.utils/history","wedge.client.core/stop","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns wedge.client.core\n  (:require [reagent.core :as r]\n            [wedge.client.ws :refer [start-ws!]]\n            [wedge.client.state :refer [load-state!]]\n            [wedge.client.actions :refer [set-page!]]\n            [wedge.client.components.core :refer [root]]\n            [wedge.client.components.utils :refer [history]]))\n\n(enable-console-print!)\n\n(defn set-page-from-location! [location]\n  (-> location .-pathname (subs 1) keyword set-page!))\n\n;; start is called by init and after code reloading finishes\n(defn ^:dev/after-load start []\n  (r/render [root] (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (start-ws!\n   (fn []\n     (load-state!)\n     (set-page-from-location! js/location)\n     (.listen history set-page-from-location!)\n     (start))))\n\n;; this is called before any code is reloaded\n(defn ^:dev/before-load stop []\n  (println \"stop\"))\n"]}