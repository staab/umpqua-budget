{"version":3,"file":"wedge.client.state.js","sources":["wedge/client/state.cljs"],"mappings":";;;;AAIA,iCAAA,2CAAA,+DAAA,KAAA,sDAAA,KAAA,uDAAA,lQAAKA;AAGL,oCAAA,2CAAA,kEAAA,KAAA,tJAAKC,4NAEYD;AAEjB,GAAA,QAAAE,kCAAAC,yCAAAC,+CAAAC;AAAA;AAAA,AAAA,AAASC,2BAAM,AAACC,gDAAON;;AACvB,GAAA,QAAAC,kCAAAC,yCAAAC,+CAAAI;AAAA;AAAA,AAAA,AAASC,gCAAW,6CAAA,mFAAA,hIAACC,oBAASJ;;AAC9B,GAAA,QAAAJ,kCAAAC,yCAAAC,+CAAAO;AAAA;AAAA,AAAA,AAASC,kCAAa,6CAAA,mFAAA,hIAACF,oBAASJ;;AAEhC,sCAAA,tCAAMO;AAAN,AACE,IAAAC,qBAAW,4BAAA,5BAAUE;AAArB,AAAA,oBAAAF;AAAA,QAAAA,JAASC;AAAT,AACE,OAACE,sBAAOX,yBAAM,AAACY,sDAAYH;;AAD7B;;;AAGF,sCAAA,tCAAMI;AAAN,AACE,4BAAA,rBAAUC,6BAAwB,yGAAA,AAAAC,zGAACC,yHAAShB","names":["wedge.client.state/async-state","wedge.client.state/starting-state","js/wedge","js/wedge.client","js/wedge.client.state","js/wedge.client.state.state","wedge.client.state/state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","js/wedge.client.state.session-id","wedge.client.state/session-id","reagent.core/cursor","js/wedge.client.state.transactions","wedge.client.state/transactions","wedge.client.state/load-state!","temp__5455__auto__","v","window/localStorage","cljs.core/reset!","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","wedge.client.state/save-state!","js/localStorage","cljs.core/deref","cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns wedge.client.state\n  (:require [cljs.reader :refer [read-string]]\n            [reagent.core :as r]))\n\n(def async-state\n  {:last-load nil :value nil :error nil})\n\n(def starting-state\n  {:session-id nil\n   :transactions async-state})\n\n(defonce state (r/atom starting-state))\n(defonce session-id (r/cursor state [:session-id]))\n(defonce transactions (r/cursor state [:transactions]))\n\n(defn load-state! []\n  (if-let [v (.getItem window.localStorage \"wedge\")]\n    (reset! state (read-string v))))\n\n(defn save-state! []\n  (.setItem js/localStorage \"wedge\" (prn-str @state)))\n\n"]}